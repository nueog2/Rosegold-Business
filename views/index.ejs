<!-- 

<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <title>노드 채팅방</title>
    <style>
        #connectedHotels {
            margin-top: 20px;
            border: 1px solid #ccc;
            padding: 10px;
        }

        #connectedHotels ul {
            list-style: none;
            padding: 0;
        }

        #connectedHotels li {
            margin-bottom: 5px;
        }
    </style>
</head>

<body>
    <div>F12를 눌러 console 탭과 network 탭을 확인하세요.</div>

    <form id="hotelIdForm">
        <label for="hotelIdInput">호텔 ID:</label>
        <input type="text" id="hotelIdInput" name="hotelId">
        <button type="submit">연결</button>
    </form>

    <div id="connectedHotels">
        <h3>연결된 호텔</h3>
        <ul id="hotelList"> 
        </ul>
    </div>

    <script>
        const form = document.getElementById("hotelIdForm");
        const websocketUrl = "ws://localhost:6060"; // 실제 서버 주소로 변경
        const hotelList = document.getElementById("hotelList");

        function updateHotelList(connectedHotels) {
            hotelList.innerHTML = ""; // 목록 초기화
            for (const hotelId in connectedHotels) {
                const hotelName = connectedHotels[hotelId];
                const listItem = document.createElement("li");
                listItem.textContent = `${hotelName} (ID: ${hotelId})`;
                hotelList.appendChild(listItem);
            }
        }

        form.addEventListener("submit", (event) => {
            event.preventDefault(); // 폼 제출 기본 동작 방지
            const hotelId = document.getElementById("hotelIdInput").value;
            const webSocket = new WebSocket(`${websocketUrl}?hotelId=${hotelId}`);

            webSocket.onopen = function () {
                console.log('서버와 웹소켓 연결 성공!');
                webSocket.send(JSON.stringify({ action: "getHotelName", hotelId: hotelId })); // 호텔 이름 요청
            };

            webSocket.onmessage = function (event) {
                console.log("서버로부터 받은 메시지:", event.data);
                try {
                    const data = JSON.parse(event.data);
                    if (data.action === "hotelName") {
                        // ... (호텔 이름 처리)
                    } else if (data.action === "connectedHotels") {
                        // ... (연결된 호텔 목록 처리)
                    } else if (data.event) {
                        // 이벤트 메시지 처리 (여기에 console.log 추가)
                        console.log("이벤트 메시지:", data);
                        alert(JSON.stringify(data)); // alert 대신 원하는 방식으로 메시지 표시
                    } else {
                        // 기타 메시지 처리
                        webSocket.send('클라이언트에서 서버로 답장을 보냅니다');
                    }
                } catch (error) {
                    console.error("메시지 파싱 오류:", error);
                }
            };
        });
    </script>
</body>

</html> -->
<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <title>SSE Example</title>
    <style>
        #connectedHotels {
            margin-top: 20px;
            border: 1px solid #ccc;
            padding: 10px;
        }

        #connectedHotels ul {
            list-style: none;
            padding: 0;
        }

        #connectedHotels li {
            margin-bottom: 5px;
        }
    </style>
</head>

<body>
    <div>F12를 눌러 console 탭과 network 탭을 확인하세요.</div>

    <div id="connectedHotels">
        <h3>연결된 호텔</h3>
        <ul id="hotelList"></ul>
    </div>

    <script>
        const hotelList = document.getElementById("hotelList");

        function updateHotelList(hotels) {
            hotelList.innerHTML = "";
            hotels.forEach((hotel) => {
                const listItem = document.createElement("li");
                listItem.textContent = `${hotel.name} (ID: ${hotel.id})`;
                hotelList.appendChild(listItem);
            });
        }

        function getHotelIdsFromQueryString() {
            const queryParams = new URLSearchParams(window.location.search);
            const hotelIds = queryParams.get("hotelId");
            return hotelIds ? hotelIds.split(",") : [];
        }

        function connectToSSE() {
            const hotelIds = getHotelIdsFromQueryString();

            if (hotelIds.length > 0) {
                // EventSource 객체를 하나만 생성하고, 모든 hotelId를 쿼리 파라미터로 전달
                const eventSource = new EventSource(`/events?hotelId=${hotelIds.join(",")}`);

                eventSource.onopen = (event) => {
                    console.log(`SSE connection opened for Hotel IDs ${hotelIds.join(", ")}.`);
                };

                eventSource.addEventListener("connectedHotels", (event) => {
                    const data = JSON.parse(event.data);
                    updateHotelList(data.hotels);
                });

                eventSource.addEventListener("Human_Detected", (event) => {
                    const data = JSON.parse(event.data);
                    console.log("Human_Detected event received:", data);
                    alert(JSON.stringify(data));
                });

                eventSource.onmessage = (event) => {
                    const data = JSON.parse(event.data);
                    console.log("Message received:", data);
                    // 추가적인 메시지 처리 (필요한 경우)
                };

                eventSource.onerror = (error) => {
                    console.error(`SSE error:`, error);
                    // eventSource.close(); // 필요에 따라 주석 해제하여 에러 발생 시 연결 종료
                };
            } else {
                console.log("No hotel IDs specified in the query string.");
            }
        }

        // 페이지 로드 시 SSE 연결
        connectToSSE();
    </script>
</body>

</html>