<!-- <!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <title>노드 채팅방</title>
</head>

<body>
    <div>F12를 눌러 console 탭과 network 탭을 확인하세요.</div>

    <script>
        // websocket으로 서버와 http 포트 연결. http포트와 공유해서 통신할 수 있음
        // wesocket객체는 기본적으로 브라우저에서 지원
        const webSocket = new WebSocket("ws://localhost:6060");

        // 서버에서 wss.on('connection' 이 성공적으로 되면, 이벤트 실행
        webSocket.onopen = function () {
            console.log('서버와 웹소켓 연결 성공!');
        };

        // 사실상 .onmessage 와 .send 로 메세지 통신을 하게 되는 것이다
        webSocket.onmessage = function (event) {
            console.log(event.data);
            webSocket.send('클라이언트에서 서버로 답장을 보냅니다'); // 서버로부터 메세지 받으면 바로 서버로 메세지 보냄
        };
    </script>
</body>

</html> -->

<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <title>노드 채팅방</title>
</head>

<body>
    <div>F12를 눌러 console 탭과 network 탭을 확인하세요.</div>

    <form id="hotelIdForm">
        <label for="hotelIdInput">호텔 ID:</label>
        <input type="text" id="hotelIdInput" name="hotelId">
        <button type="submit">연결</button>
    </form>

    <script>
        const form = document.getElementById("hotelIdForm");
        const websocketUrl = "ws://localhost:6060"; // 실제 서버 주소로 변경

        form.addEventListener("submit", (event) => {
            event.preventDefault(); // 폼 제출 기본 동작 방지
            const hotelId = document.getElementById("hotelIdInput").value;
            const webSocket = new WebSocket(`${websocketUrl}?hotelId=${hotelId}`);

            webSocket.onopen = function () {
                console.log('서버와 웹소켓 연결 성공!');
            };

            webSocket.onmessage = function (event) {
                console.log(event.data);
                webSocket.send('클라이언트에서 서버로 답장을 보냅니다'); // 서버로부터 메세지 받으면 바로 서버로 메세지 보냄
            };
        });
    </script>
</body>

</html>